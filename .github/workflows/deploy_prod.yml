name: deploy_prod

on:
    push:
        branches:
            - main
jobs:
    deploy:
        name: Deploy django project to EC2
        runs-on: ubuntu-latest
        env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_SG_ID: ${{ secrets.AWS_SG_ID }}
            REMOTE_IP: ${{ secrets.REMOTE_IP }}
            REMOTE_SSH_USERNAME: ${{ secrets.REMOTE_SSH_USERNAME }}
            REMOTE_SSH_PRIVKEY: ${{ secrets.REMOTE_SSH_PRIVKEY }}
            PRODPY: ${{ secrets.PRODPY }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Get Github Actions IP
              id: ip
              uses: haythem/public-ip@v1.3
            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Debug Docker tag
              run: echo ${{ env.DOCKERHUB_USERNAME }}/docker-cookai:latest
            - name: Create .env file from DOTENV environment variable
              run: |
                echo "${{ secrets.PRODPY }}" > ./cookai/prod.py
            - name: Build Docker image
              run: docker build -t ltekean/docker-cookai .
            - name: Push Docker image to docker hub
              run: docker push ltekean/docker-cookai:latest
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ap-northeast-2
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            - name: Add IP to SG
              run: |
                aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
            - name: Connect to EC2
              uses: appleboy/ssh-action@master
              with:
                key: ${{ secrets.REMOTE_SSH_PRIVKEY }}
                host: ${{ secrets.REMOTE_IP }}
                username: ${{ secrets.REMOTE_SSH_USERNAME }}
                # script_stop: true
                script: |
                    echo "Start to deploy docker"
                    whoami
                    # cd /home/ec2-user
                    # docker pull ${{ env.DOCKERHUB_USERNAME }}/docker-cookai:latest
                    # docker compose up --build -d

            - name: Revoke IP from SG
              run: |
                aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
